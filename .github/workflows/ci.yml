name: CI Check

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: 'Install Dependancies'
        run: npm ci
      - name: 'Run Linter'
        run: npm run lint
  unit-tests:
    if: "github.event_name == 'pull_request' && github.base_ref == 'master'"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: 'Install Dependancies'
        run: npm ci
      - name: 'Run Unit Tests'
        env:
          CI: true
        run: | 
          npm run test:ci -- --coverage --forceExit > report_stdout.txt 2> report_stderr.txt
      - name: Print Results
        if: success() || failure()
        run: |
          mv report_stdout.txt coverage/
          mv report_stderr.txt coverage/
          echo "Jest stderr:"
          cat coverage/report_stderr.txt
          echo ""
          echo "Jest stdout:"
          cat coverage/report_stdout.txt
      - name: Prepare Unit Test Fail Comment
        if: failure()
        id: results
        run: |
          report_stderr=$( cat coverage/report_stderr.txt )
          report_stderr="${report_stderr//'%'/'%25'}"
          report_stderr="${report_stderr//$'\n'/'%0A'}"
          report_stderr="${report_stderr//$'\r'/'%0D'}"
          report_stdout=$( cat coverage/report_stdout.txt )
          report_stdout="${report_stdout//'%'/'%25'}"
          report_stdout="${report_stdout//$'\n'/'%0A'}"
          report_stdout="${report_stdout//$'\r'/'%0D'}"
          echo "::set-output name=jest-stderr::$report_stderr"
          echo "::set-output name=jest-stdout::$report_stdout"
          echo "::set-output name=short-commit::$(git rev-parse --short ${{ github.event.after }})"
      - name: Publish Jest Failure Output
        if: failure()
        uses: phulsechinmay/rewritable-pr-comment@v0.2
        with:
          message: |
            **❌ Jest Unit Test(s) failed for commit [`${{ steps.results.outputs.short-commit }}`](https://github.com/tamu-datathon-org/gatekeeper/commit/${{ github.event.after }})**

            <details><summary>Jest stderr:</summary>
            <p>

            ```
            ${{steps.results.outputs.jest-stderr}}
            ```

            </p>
            </details>

            <details><summary>Jest stdout:</summary>
            <p>

            ```
            ${{steps.results.outputs.jest-stdout}}
            ```

            </p>
            </details>

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_IDENTIFIER: "ci-unit-tests-comment"
      - name: Upload Coverage Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: ./coverage
  publish-coverage:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Download Coverage Artifact
        uses: actions/download-artifact@v1
        with:
          name: coverage
      - uses: amondnet/now-deployment@v2.0.2
        id: publisher
        name: Create a PR deployment in now.sh
        with:
          github-comment: false
          zeit-token: ${{ secrets.ZEIT_TOKEN }}
          now-org-id: ${{ secrets.ORG_ID }}
          working-directory: ./coverage
          now-project-id: ${{ secrets.ZEIT_PROJECT_ID }}
      - name: Read Results
        id: results
        run: |
          report_stderr=$( cat coverage/report_stderr.txt | awk '/Test Suites/,0' )
          report_stderr="${report_stderr//'%'/'%25'}"
          report_stderr="${report_stderr//$'\n'/'%0A'}"
          report_stderr="${report_stderr//$'\r'/'%0D'}"
          report_stdout=$( cat coverage/report_stdout.txt | awk '/--\|/,0' )
          report_stdout="${report_stdout//'%'/'%25'}"
          report_stdout="${report_stdout//$'\n'/'%0A'}"
          report_stdout="${report_stdout//$'\r'/'%0D'}"
          echo "::set-output name=test-results::$report_stderr"
          echo "::set-output name=coverage-results::$report_stdout"
          echo "::set-output name=short-commit::$(git rev-parse --short ${{ github.event.after }})"
      - name: Publish URL in comment
        uses: phulsechinmay/rewritable-pr-comment@v0.2
        with:
          msg: |
            **✅ Jest Unit Test(s) passed for commit [`${{ steps.results.outputs.short-commit }}`](https://github.com/tamu-datathon-org/gatekeeper/commit/${{ github.event.after }})**
            Link to code coverage report: ${{ steps.publisher.outputs.preview-url }}
            
            <details><summary>Jest Unit Test Results:</summary>
            <p>

            ```
            ${{steps.results.outputs.test-results}}
            ```

            </p>
            </details>

            <details><summary>Code Coverage Preview:</summary>
            <p>

            ```
            ${{steps.results.outputs.coverage-results}}
            ```

            </p>
            </details>

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_IDENTIFIER: "ci-unit-tests-comment"